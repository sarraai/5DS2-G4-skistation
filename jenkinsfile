pipeline {
    agent any
    stages {

        stage('Code Retrieval') {
            steps {
                // Clone the project repository and select the branch.
                git branch: 'oumou', url: 'https://github.com/enamouchi/5-win-neural-navigators.git'
            }
        }
        stage('Clean and Compile with Maven') {
            steps {
                // Run Maven with clean and compile commands
                sh 'mvn clean compile'
            }
        }

        stage('Unit Test') {
            steps {
                echo 'Executing unit tests: '
                sh 'mvn test';
            }
        }

        stage('SonarQube') {
            steps {
                echo 'Analyzing Code Quality:';
                sh 'mvn sonar:sonar -Dsonar.login=admin -Dsonar.password=123BIZERTE@cab456';
            }
        }

        stage('Maven Package') {
            steps {
                echo 'Creating deliverable: ';
                sh 'mvn package -DskipTests';
            }
        }

        stage('Deploy to Nexus') {
            steps {
                echo 'Deploying to Nexus: '
                sh 'mvn deploy -DskipTests'
            }
        }

        stage('Image') {
            steps {
                echo 'Creating Image: ';
                sh 'docker build -t oumou2001/tp-foyer:1.0.0 .';
            }
        }

        stage('Dockerhub') {
            steps {
                echo 'Push Image to Dockerhub: ';
                sh 'docker login -u oumou2001 -p 1234goyou';
                sh 'docker push oumou2001/tp-foyer:1.0.0';
            }
        }

        stage('Docker-Compose') {
            steps {
                echo 'Start Backend + DB: ';
                sh 'docker compose up -d';
            }
        }

        stage('Launch Prometheus') {
            steps {
                echo 'Launching Prometheus: '
                sh 'docker run -d --name prometheus -p 9090:9090 prom/prometheus'
            }
        }

        stage('Launch Grafana') {
            steps {
                echo 'Launching Grafana: '
                sh 'docker run -d --name grafana -p 3000:3000 grafana/grafana'
            }
        }
    }
}

